7. Where is my Anagram at? (Python - Function Fill)
What is an anagram? Well, two words are anagrams of each other if they both contain the same letters. For example:
'abba' & 'baab' == true
'abba' & 'bbaa' == true
'abba' & 'abbba' == false
'abba' & 'abca' == false

Write a function that will find all the anagrams of a word from a list. You will be given two inputs a word and an array with words. You should return an array of all the anagrams or an empty array if there are none. For example:

Input: ’abba', ['aabb', 'abcd', 'bbaa', 'dada']) Output: ['aabb', 'bbaa']
Input: ‘racer', ['crazer', 'carer', 'racar', 'caers', 'racer'] Output: ['carer', 'racer']
Input: 'laser', ['lazing', 'lazy',  'lacer'] Output: []

Program: 
def anagrams(word, words):
    word = sortCharacters(word)
    final_list = []
    for myStr in words:
        sortWord = sortCharacters(myStr)
        if sortWord == word:
            final_list.append(myStr)
    return final_list
            
def sortCharacters(str):
    final_sort = sorted(str)
    str = "".join(final_sort)
    return str


Test case 1:
Input:
'abba'
['aabb', 'abcd', 'bbaa', 'dada']
Output:
['aabb', 'bbaa']

Test case 2:
Input:
‘racer'
['crazer', 'carer', 'racar', 'caers', 'racer']
Output:
['carer', 'racer']

Test case 3:
Input:
'laser'
['lazing', 'lazy',  'lacer']
Output:
[]
